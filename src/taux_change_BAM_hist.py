from pyspark.sql import SparkSession
from pyspark.sql.functions import expr, substring, udf, when, col, current_date, lit
import pyspark.sql.functions as F
from pyspark.sql.types import *
import subprocess

spark = SparkSession.builder.appName("TAUX DE CHANGE").getOrCreate()

df_a = spark.read.option("header", "true").option("sep", ",").csv("hdfs://10.9.125.134:8020/CHARGEMENT/TAUX_CHANGE_BILLET_HIST.csv")
df_e = spark.read.option("header", "true").option("sep", ",").csv("hdfs://10.9.125.134:8020/CHARGEMENT/TAUX_CHANGE_VIREMENT_HIST.csv")

df_virement = df_e.withColumn("TYPE", lit('VIREMENT'))
df_billet = df_a.withColumn("TYPE", lit('BILLET'))

df_billet.createOrReplaceTempView("BILLET")
df_virement.createOrReplaceTempView("VIREMENT")

result_df = spark.sql(
    """
    SELECT * FROM BILLET 
    UNION
    SELECT * FROM VIREMENT ;
"""
)

COUCHE = "nifi"
DOMAINE = "DLKPROD"
TABLE = "TAUX_CHANGE_BAM_HIST"

# Saving the resulting table
result_df.coalesce(1).write.parquet(
    f"hdfs://10.9.125.134:8020/{COUCHE}/{DOMAINE}/{TABLE}_TEMP", mode="overwrite")

# Searching for .parquet files in the temporary folder
parquet_files = subprocess.run(["hdfs", "dfs", "-find", 
                f"hdfs://10.9.125.134:8020/{COUCHE}/{DOMAINE}/{TABLE}_TEMP/*.parquet"],
                capture_output=True, text=True)

# Handling the existence of .parquet files
if parquet_files.returncode == 0 and parquet_files.stdout:
    # Remove the _SUCCESS file generated by Spark
    subprocess.run(["hdfs", "dfs", "-rm", f"hdfs://10.9.125.134:8020/{COUCHE}/{DOMAINE}/{TABLE}_TEMP/_SUCCESS"]) 
# Handling the existence of .parquet files
    for filename in parquet_files.stdout.splitlines():
        subprocess.run(["hdfs", "dfs", "-mv", filename, 
            f"hdfs://10.9.125.134:8020/{COUCHE}/{DOMAINE}/{TABLE}"])
    
    # Remove the temporary folder after renaming the files
    subprocess.run(["hdfs", "dfs", "-rm", "-r", f"hdfs://10.9.125.134:8020/{COUCHE}/{DOMAINE}/{TABLE}_TEMP"])

# Stop the Spark session if no further operations are needed
spark.stop()