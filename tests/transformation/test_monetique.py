import pandas as pd

from src.transformation.monetique import (
    achat_ecom_tpe,
    achat_gab_cdm_cdm_iam_meditel,
    achat_gab_cdm_cdm_lydec,
    retrait_gab_cdm_cdm,
    retrait_gab_confrere_cdm,
    retrait_gab_etranger_cdm,
)
from tests.conftest import compare_dataframes


def test_retrait_gab_cdm_cdm(spark):
    authorization = spark.createDataFrame(
        [
            (
                "1",
                "N",
                "1",
                None,
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C11",
                "T1",
                "111",
                "00",
                "1",
                "1",
                "1",
                "4",
                "1",
                "9",
                None,
                "MD",
                "W",
            ),
            (
                "2",
                "N",
                "3",
                "07000",
                None,
                "79",
                "ID2",
                "2024-10-10",
                "2024-10-10",
                11,
                11,
                "0000000000C2",
                "T1",
                "111",
                "00",
                "1",
                "2",
                "2",
                "3",
                "1",
                "S",
                "0002",
                "VI",
                "W",
            ),
            (
                "3",
                "N",
                "2",
                "07000",
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C12",
                "T2",
                "122",
                "00",
                "1",
                "5",
                "5",
                "1",
                "1",
                "T",
                "0004",
                "PL",
                "W",
            ),
            (
                "4",
                "N",
                "3",
                "07000",
                None,
                "75",
                "ID3",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                "0000000000C3",
                "T3",
                "111",
                "00",
                "2",
                "4",
                "5",
                "2",
                "4",
                "U",
                "0002",
                "VI",
                "N",
            ),
            (
                "5",
                "N",
                "2",
                None,
                "ATM",
                "73",
                "ID4",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                None,
                "T2",
                "422",
                "00",
                "1",
                "2",
                "2",
                "1",
                "3",
                "V",
                "0002",
                "VI",
                "N",
            ),
            (
                "6",
                "W",
                "3",
                None,
                None,
                "75",
                "ID5",
                "2024-10-10",
                "2024-10-10",
                5,
                5,
                "0000000000C4",
                "T3",
                "233",
                "00",
                "1",
                "1",
                "1",
                "5",
                "2",
                "A",
                None,
                "PL",
                "N",
            ),
        ],
        [
            "aut_code",
            "aut_reve_stat",
            "aut_bin_type",
            "aut_tran_code",
            "aut_user",
            "aut_sour_inte_code",
            "aut_prim_acct_numb_f002",
            "aut_requ_syst_time",
            "partitiondate",
            "aut_tran_amou_f004",
            "aut_bill_amou_f006",
            "aut_acco_id1_f102",
            "aut_card_accp_id_code_f042",
            "aut_resp_code_f039",
            "aut_bin_iden",
            "aut_tran_curr_f049",
            "aut_acqr_inst_id_code_f032",
            "aut_forw_inst_id_code_f033",
            "aut_merc_type_f018",
            "aut_acqr_inst_coun_code_f019",
            "aut_card_data_inpt_mode_f22_09",
            "aut_cert_numb_f048_11",
            "aut_addi_data_f048",
            "aut_merc_dom",
        ],
    )

    information_compte = spark.createDataFrame(
        [
            ("T1", "C11"),
            ("T1", "C12"),
            ("T2", "C2"),
            ("T3", "C3"),
            ("T4", "C4"),
        ],
        ["numerotiers", "numerodecompte"],
    )

    response_code_action = spark.createDataFrame(
        [
            ("1", "Approve"),
            ("2", "Decline"),
            ("3", "Capture"),
        ],
        ["rco_code", "rco_iden"],
    )

    authorization_response_f039 = spark.createDataFrame(
        [
            ("11", "Terminee avec succes"),
            ("22", "Erreur"),
            ("33", "Transaction Invalide"),
            ("44", "Montant Invalide"),
        ],
        ["are_code", "are_labe"],
    )

    transaction_code = spark.createDataFrame(
        [
            ("07000", "COMMISSION CENTRE"),
            ("07001", "Cash Back"),
            ("07002", "FRAIS DEMANDE SOLDE"),
            ("07003", "PAIEMENT FACTURE"),
        ],
        ["tco_code", "tco_labe"],
    )

    currency = spark.createDataFrame(
        [
            ("1", "MAD"),
            ("2", "EUR"),
            ("3", "USD"),
            ("4", "FCFA"),
        ],
        ["cur_ide", "cur_alph_code"],
    )

    card_program = spark.createDataFrame(
        [
            ("1", "Daba"),
            ("2", "VISA"),
            ("3", "Silver"),
            ("4", "Platinium"),
        ],
        ["cpr_code", "cpr_labe"],
    )

    card = spark.createDataFrame(
        [
            ("ID1", "1", "2022-10-05", None, "2027-10-04", None),
            ("ID2", "1", "2024-01-15", None, "2029-01-14", None),
            ("ID3", "2", "2019-02-10", "2024-02-11", "2024-02-09", "2029-02-10"),
            ("ID4", "3", "2018-10-25", "2023-10-26", "2023-10-24", "2028-10-25"),
            ("ID5", "4", "2024-10-09", None, "2029-10-08", None),
        ],
        [
            "car_numb",
            "car_cpr_code",
            "car_firs_crea_date",
            "car_rene_date",
            "car_expi_date",
            "car_rene_new_expi_date",
        ],
    )

    interfaces = spark.createDataFrame(
        [
            ("79", "14"),
            ("75", "14"),
            ("95", "14"),
            ("80", "4"),
            ("72", "14"),
        ],
        ["int_code", "int_ity_code"],
    )

    country = spark.createDataFrame(
        [
            ("1", "MOROCCO"),
            ("2", "CONGO"),
            ("3", "ALGERIE"),
            ("4", "FRANCE"),
            ("5", "USA"),
        ],
        ["cou_iden", "cou_name"],
    )

    merchant_activity = spark.createDataFrame(
        [
            ("1", "RESTURANTS"),
            ("2", "SUPERMARKETS"),
            ("3", "BEAUTY SHOPS"),
            ("4", "GAMES STORES"),
            ("5", "BOOK STORES"),
        ],
        ["mac_iden", "mac_labe"],
    )

    actual = retrait_gab_cdm_cdm(
        authorization,
        interfaces,
        country,
        merchant_activity,
        card,
        card_program,
        currency,
        transaction_code,
        authorization_response_f039,
        response_code_action,
        information_compte,
    )

    expected = pd.DataFrame(
        [
            (
                "2",
                "T2",
                "C2",
                "ON LINE",
                "RETRAIT GAB CDM - CARTE CDM",
                "RETRAIT NATIONAL",
                "COMMISSION CENTRE",
                "GAB",
                "T1",
                "CDM",
                "MOROCCO",
                "BEAUTY SHOPS",
                "ID2",
                "2024-01-15",
                None,
                "2029-01-14",
                "CDM",
                "MOROCCO",
                "00",
                "DABA",
                "MAD",
                11,
                "2024-10-10",
                "10",
                "2024",
                "2024-10-10",
                "Terminee avec succes",
                "Approve",
                "111",
                11,
            ),
            (
                "4",
                "T3",
                "C3",
                "ON LINE",
                "RETRAIT GAB CDM - CARTE CDM",
                "RETRAIT NATIONAL",
                "COMMISSION CENTRE",
                "GAB",
                "T3",
                "CDM",
                "FRANCE",
                "SUPERMARKETS",
                "ID3",
                "2019-02-10",
                "2024-02-11",
                "2029-02-10",
                "CDM",
                "FRANCE",
                "00",
                "VISA",
                "EUR",
                12,
                "2024-10-10",
                "10",
                "2024",
                "2024-10-10",
                "Terminee avec succes",
                "Approve",
                "111",
                12,
            ),
        ],
        columns=[
            "tra_num_transaction",
            "numerotiers",
            "numerodecompte",
            "tra_mode_transaction",
            "tra_categorie_transaction",
            "tra_type_transaction",
            "tra_lib_transaction",
            "tra_type_terminal",
            "tra_num_terminal",
            "tra_bq_terminal",
            "tra_pays_terminal",
            "tra_activite_commercant",
            "tra_num_porteur",
            "car_date_souscription",
            "car_date_renouvellement",
            "car_date_expiration",
            "tra_bq_porteur",
            "tra_pays_porteur",
            "tra_bin_iden",
            "tra_type_carte",
            "tra_code_devise",
            "tra_mt_transaction",
            "tra_date_transaction",
            "tra_mois_transaction",
            "tra_annee_transaction",
            "tra_date_traitement",
            "tra_reponse_autorisation",
            "tra_reponse_action",
            "tra_code_reponse",
            "tra_montant_dh",
        ],
    )

    compare_dataframes(actual, expected, sort_by=["tra_num_transaction"])


def test_retrait_gab_confrere_cdm(spark):
    authorization = spark.createDataFrame(
        [
            (
                "1",
                "N",
                "1",
                None,
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C11",
                "T1",
                "111",
                "00",
                "1",
                "1",
                "1",
                "4",
                "1",
                "9",
                None,
                "MD",
                "W",
            ),
            (
                "2",
                "N",
                "3",
                "07000",
                None,
                "79",
                "ID2",
                "2024-10-10",
                "2024-10-10",
                11,
                11,
                "0000000000C2",
                "T1",
                "111",
                "00",
                "1",
                "2",
                "2",
                "3",
                "1",
                "S",
                "0002",
                "VI",
                "W",
            ),
            (
                "3",
                "N",
                "2",
                "07000",
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C12",
                "T2",
                "122",
                "00",
                "1",
                "5",
                "5",
                "1",
                "1",
                "T",
                "0004",
                "PL",
                "W",
            ),
            (
                "4",
                "N",
                "3",
                "07000",
                None,
                "75",
                "ID3",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                "0000000000C3",
                "T3",
                "111",
                "00",
                "2",
                "4",
                "5",
                "2",
                "4",
                "U",
                "0002",
                "VI",
                "N",
            ),
            (
                "5",
                "N",
                "2",
                None,
                "ATM",
                "73",
                "ID4",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                None,
                "T2",
                "422",
                "00",
                "1",
                "2",
                "2",
                "1",
                "3",
                "V",
                "0002",
                "VI",
                "N",
            ),
            (
                "6",
                "W",
                "3",
                None,
                None,
                "75",
                "ID5",
                "2024-10-10",
                "2024-10-10",
                5,
                5,
                "0000000000C4",
                "T3",
                "233",
                "00",
                "1",
                "1",
                "1",
                "5",
                "2",
                "A",
                None,
                "PL",
                "N",
            ),
        ],
        [
            "aut_code",
            "aut_reve_stat",
            "aut_bin_type",
            "aut_tran_code",
            "aut_user",
            "aut_sour_inte_code",
            "aut_prim_acct_numb_f002",
            "aut_requ_syst_time",
            "partitiondate",
            "aut_tran_amou_f004",
            "aut_bill_amou_f006",
            "aut_acco_id1_f102",
            "aut_card_accp_id_code_f042",
            "aut_resp_code_f039",
            "aut_bin_iden",
            "aut_tran_curr_f049",
            "aut_acqr_inst_id_code_f032",
            "aut_forw_inst_id_code_f033",
            "aut_merc_type_f018",
            "aut_acqr_inst_coun_code_f019",
            "aut_card_data_inpt_mode_f22_09",
            "aut_cert_numb_f048_11",
            "aut_addi_data_f048",
            "aut_merc_dom",
        ],
    )

    information_compte = spark.createDataFrame(
        [
            ("T1", "C11"),
            ("T1", "C12"),
            ("T2", "C2"),
            ("T3", "C3"),
            ("T4", "C4"),
        ],
        ["numerotiers", "numerodecompte"],
    )

    response_code_action = spark.createDataFrame(
        [
            ("1", "Approve"),
            ("2", "Decline"),
            ("3", "Capture"),
        ],
        ["rco_code", "rco_iden"],
    )

    authorization_response_f039 = spark.createDataFrame(
        [
            ("11", "Terminee avec succes"),
            ("22", "Erreur"),
            ("33", "Transaction Invalide"),
            ("44", "Montant Invalide"),
        ],
        ["are_code", "are_labe"],
    )

    transaction_code = spark.createDataFrame(
        [
            ("07000", "COMMISSION CENTRE"),
            ("07001", "Cash Back"),
            ("07002", "FRAIS DEMANDE SOLDE"),
            ("07003", "PAIEMENT FACTURE"),
        ],
        ["tco_code", "tco_labe"],
    )

    currency = spark.createDataFrame(
        [
            ("1", "MAD"),
            ("2", "EUR"),
            ("3", "USD"),
            ("4", "FCFA"),
        ],
        ["cur_ide", "cur_alph_code"],
    )

    card_program = spark.createDataFrame(
        [
            ("1", "Daba"),
            ("2", "VISA"),
            ("3", "Silver"),
            ("4", "Platinium"),
        ],
        ["cpr_code", "cpr_labe"],
    )

    card = spark.createDataFrame(
        [
            ("ID1", "1", "2022-10-05", None, "2027-10-04", None),
            ("ID2", "1", "2024-01-15", None, "2029-01-14", None),
            ("ID3", "2", "2019-02-10", "2024-02-11", "2024-02-09", "2029-02-10"),
            ("ID4", "3", "2018-10-25", "2023-10-26", "2023-10-24", "2028-10-25"),
            ("ID5", "4", "2024-10-09", None, "2029-10-08", None),
        ],
        [
            "car_numb",
            "car_cpr_code",
            "car_firs_crea_date",
            "car_rene_date",
            "car_expi_date",
            "car_rene_new_expi_date",
        ],
    )

    acquier_bank_cmi = spark.createDataFrame(
        [
            ("1", "1", "BMCE"),
            ("2", "2", "SGMB"),
            ("3", "3", "BCP"),
            ("4", "4", "AWB"),
            ("5", "5", "CIH"),
        ],
        ["abc_acq_code", "abc_fwd_code", "abc_labe"],
    )

    country = spark.createDataFrame(
        [
            ("1", "MOROCCO"),
            ("2", "CONGO"),
            ("3", "ALGERIE"),
            ("4", "FRANCE"),
            ("5", "USA"),
        ],
        ["cou_iden", "cou_name"],
    )

    merchant_activity = spark.createDataFrame(
        [
            ("1", "RESTURANTS"),
            ("2", "SUPERMARKETS"),
            ("3", "BEAUTY SHOPS"),
            ("4", "GAMES STORES"),
            ("5", "BOOK STORES"),
        ],
        ["mac_iden", "mac_labe"],
    )

    actual = retrait_gab_confrere_cdm(
        authorization,
        country,
        merchant_activity,
        card,
        card_program,
        currency,
        acquier_bank_cmi,
        transaction_code,
        authorization_response_f039,
        response_code_action,
        information_compte,
    )

    expected = pd.DataFrame(
        [
            (
                "4",
                "T3",
                "C3",
                "ON LINE",
                "RETRAIT GAB CONFRERE - CARTE CDM",
                "RETRAIT NATIONAL",
                "COMMISSION CENTRE",
                "GAB",
                "T3",
                None,
                "FRANCE",
                "SUPERMARKETS",
                "ID3",
                "2019-02-10",
                "2024-02-11",
                "2029-02-10",
                "CDM",
                "FRANCE",
                "00",
                "VISA",
                "EUR",
                12,
                "2024-10-10",
                "10",
                "2024",
                "2024-10-10",
                "Terminee avec succes",
                "Approve",
                "111",
                12,
            )
        ],
        columns=[
            "tra_num_transaction",
            "numerotiers",
            "numerodecompte",
            "tra_mode_transaction",
            "tra_categorie_transaction",
            "tra_type_transaction",
            "tra_lib_transaction",
            "tra_type_terminal",
            "tra_num_terminal",
            "tra_bq_terminal",
            "tra_pays_terminal",
            "tra_activite_commercant",
            "tra_num_porteur",
            "car_date_souscription",
            "car_date_renouvellement",
            "car_date_expiration",
            "tra_bq_porteur",
            "tra_pays_porteur",
            "tra_bin_iden",
            "tra_type_carte",
            "tra_code_devise",
            "tra_mt_transaction",
            "tra_date_transaction",
            "tra_mois_transaction",
            "tra_annee_transaction",
            "tra_date_traitement",
            "tra_reponse_autorisation",
            "tra_reponse_action",
            "tra_code_reponse",
            "tra_montant_dh",
        ],
    )

    compare_dataframes(actual, expected, sort_by=["tra_num_transaction"])


def test_retrait_gab_etranger_cdm(spark):
    authorization = spark.createDataFrame(
        [
            (
                "1",
                "N",
                "1",
                None,
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C11",
                "T1",
                "111",
                "00",
                "1",
                "1",
                "1",
                "4",
                "1",
                "9",
                None,
                "MD",
                "W",
            ),
            (
                "2",
                "N",
                "3",
                "07000",
                None,
                "79",
                "ID2",
                "2024-10-10",
                "2024-10-10",
                11,
                11,
                "0000000000C2",
                "T1",
                "111",
                "00",
                "4",
                "2",
                "2",
                "3",
                "2",
                "S",
                "0002",
                "VI",
                "W",
            ),
            (
                "3",
                "N",
                "2",
                "07000",
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C12",
                "T2",
                "122",
                "00",
                "1",
                "5",
                "5",
                "1",
                "1",
                "T",
                "0004",
                "PL",
                "W",
            ),
            (
                "4",
                "N",
                "3",
                "07000",
                None,
                "75",
                "ID3",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                "0000000000C3",
                "T3",
                "111",
                "00",
                "2",
                "4",
                "5",
                "2",
                "4",
                "U",
                "0002",
                "VI",
                "N",
            ),
            (
                "5",
                "N",
                "2",
                None,
                "ATM",
                "73",
                "ID4",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                None,
                "T2",
                "422",
                "00",
                "1",
                "2",
                "2",
                "1",
                "3",
                "V",
                "0002",
                "VI",
                "N",
            ),
            (
                "6",
                "W",
                "3",
                None,
                None,
                "75",
                "ID5",
                "2024-10-10",
                "2024-10-10",
                5,
                5,
                "0000000000C4",
                "T3",
                "233",
                "00",
                "1",
                "1",
                "1",
                "5",
                "2",
                "A",
                None,
                "PL",
                "N",
            ),
        ],
        [
            "aut_code",
            "aut_reve_stat",
            "aut_bin_type",
            "aut_tran_code",
            "aut_user",
            "aut_sour_inte_code",
            "aut_prim_acct_numb_f002",
            "aut_requ_syst_time",
            "partitiondate",
            "aut_tran_amou_f004",
            "aut_bill_amou_f006",
            "aut_acco_id1_f102",
            "aut_card_accp_id_code_f042",
            "aut_resp_code_f039",
            "aut_bin_iden",
            "aut_tran_curr_f049",
            "aut_acqr_inst_id_code_f032",
            "aut_forw_inst_id_code_f033",
            "aut_merc_type_f018",
            "aut_acqr_inst_coun_code_f019",
            "aut_card_data_inpt_mode_f22_09",
            "aut_cert_numb_f048_11",
            "aut_addi_data_f048",
            "aut_merc_dom",
        ],
    )

    information_compte = spark.createDataFrame(
        [
            ("T1", "C11"),
            ("T1", "C12"),
            ("T2", "C2"),
            ("T3", "C3"),
            ("T4", "C4"),
        ],
        ["numerotiers", "numerodecompte"],
    )

    response_code_action = spark.createDataFrame(
        [
            ("1", "Approve"),
            ("2", "Decline"),
            ("3", "Capture"),
        ],
        ["rco_code", "rco_iden"],
    )

    authorization_response_f039 = spark.createDataFrame(
        [
            ("11", "Terminee avec succes"),
            ("22", "Erreur"),
            ("33", "Transaction Invalide"),
            ("44", "Montant Invalide"),
        ],
        ["are_code", "are_labe"],
    )

    transaction_code = spark.createDataFrame(
        [
            ("07000", "COMMISSION CENTRE"),
            ("07001", "Cash Back"),
            ("07002", "FRAIS DEMANDE SOLDE"),
            ("07003", "PAIEMENT FACTURE"),
        ],
        ["tco_code", "tco_labe"],
    )

    currency = spark.createDataFrame(
        [
            ("1", "MAD"),
            ("2", "EUR"),
            ("3", "USD"),
            ("4", "FCFA"),
        ],
        ["cur_ide", "cur_alph_code"],
    )

    card_program = spark.createDataFrame(
        [
            ("1", "Daba"),
            ("2", "VISA"),
            ("3", "Silver"),
            ("4", "Platinium"),
        ],
        ["cpr_code", "cpr_labe"],
    )

    card = spark.createDataFrame(
        [
            ("ID1", "1", "2022-10-05", None, "2027-10-04", None),
            ("ID2", "1", "2024-01-15", None, "2029-01-14", None),
            ("ID3", "2", "2019-02-10", "2024-02-11", "2024-02-09", "2029-02-10"),
            ("ID4", "3", "2018-10-25", "2023-10-26", "2023-10-24", "2028-10-25"),
            ("ID5", "4", "2024-10-09", None, "2029-10-08", None),
        ],
        [
            "car_numb",
            "car_cpr_code",
            "car_firs_crea_date",
            "car_rene_date",
            "car_expi_date",
            "car_rene_new_expi_date",
        ],
    )

    country = spark.createDataFrame(
        [
            ("1", "MOROCCO"),
            ("2", "CONGO"),
            ("3", "ALGERIE"),
            ("4", "FRANCE"),
            ("5", "USA"),
        ],
        ["cou_iden", "cou_name"],
    )

    merchant_activity = spark.createDataFrame(
        [
            ("1", "RESTURANTS"),
            ("2", "SUPERMARKETS"),
            ("3", "BEAUTY SHOPS"),
            ("4", "GAMES STORES"),
            ("5", "BOOK STORES"),
        ],
        ["mac_iden", "mac_labe"],
    )

    actual = retrait_gab_etranger_cdm(
        authorization,
        country,
        merchant_activity,
        card,
        card_program,
        currency,
        transaction_code,
        authorization_response_f039,
        response_code_action,
        information_compte,
    )

    expected = pd.DataFrame(
        [
            (
                "2",
                "T2",
                "C2",
                "ON LINE",
                "RETRAIT GAB ETRANGER - CARTE CDM",
                "RETRAIT INTERNATIONAL",
                "COMMISSION CENTRE",
                "GAB",
                "T1",
                "ETRANGER",
                "CONGO",
                "BEAUTY SHOPS",
                "ID2",
                "2024-01-15",
                None,
                "2029-01-14",
                "CDM",
                "MOROCCO",
                "00",
                "DABA",
                "FCFA",
                11,
                "2024-10-10",
                "10",
                "2024",
                "2024-10-10",
                "Terminee avec succes",
                "Approve",
                "111",
                11,
            ),
        ],
        columns=[
            "tra_num_transaction",
            "numerotiers",
            "numerodecompte",
            "tra_mode_transaction",
            "tra_categorie_transaction",
            "tra_type_transaction",
            "tra_lib_transaction",
            "tra_type_terminal",
            "tra_num_terminal",
            "tra_bq_terminal",
            "tra_pays_terminal",
            "tra_activite_commercant",
            "tra_num_porteur",
            "car_date_souscription",
            "car_date_renouvellement",
            "car_date_expiration",
            "tra_bq_porteur",
            "tra_pays_porteur",
            "tra_bin_iden",
            "tra_type_carte",
            "tra_code_devise",
            "tra_mt_transaction",
            "tra_date_transaction",
            "tra_mois_transaction",
            "tra_annee_transaction",
            "tra_date_traitement",
            "tra_reponse_autorisation",
            "tra_reponse_action",
            "tra_code_reponse",
            "tra_montant_dh",
        ],
    )

    compare_dataframes(actual, expected, sort_by=["tra_num_transaction"])


def test_achat_gab_cdm_cdm_iam_meditel(spark):
    authorization = spark.createDataFrame(
        [
            (
                "1",
                "N",
                "1",
                None,
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C11",
                "T1",
                "111",
                "00",
                "1",
                "1",
                "1",
                "4",
                "1",
                "9",
                None,
                "MD",
                "W",
            ),
            (
                "2",
                "N",
                "3",
                "07000",
                None,
                "79",
                "ID2",
                "2024-10-10",
                "2024-10-10",
                11,
                11,
                "0000000000C2",
                "T1",
                "111",
                "00",
                "1",
                "2",
                "2",
                "3",
                "1",
                "S",
                "0002",
                "VI",
                "W",
            ),
            (
                "3",
                "N",
                "2",
                "07000",
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C12",
                "T2",
                "122",
                "00",
                "1",
                "5",
                "5",
                "1",
                "1",
                "T",
                "0004",
                "PL",
                "W",
            ),
            (
                "4",
                "N",
                "3",
                "07000",
                None,
                "75",
                "ID3",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                "0000000000C3",
                "T3",
                "111",
                "00",
                "1",
                "4",
                "5",
                "2",
                "4",
                "U",
                "0002",
                "VI",
                "N",
            ),
            (
                "5",
                "N",
                "2",
                None,
                "ATM",
                "73",
                "ID4",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                None,
                "T2",
                "422",
                "00",
                "1",
                "2",
                "2",
                "1",
                "3",
                "V",
                "0002",
                "VI",
                "N",
            ),
            (
                "6",
                "W",
                "3",
                None,
                None,
                "75",
                "ID5",
                "2024-10-10",
                "2024-10-10",
                5,
                5,
                "0000000000C4",
                "T3",
                "233",
                "00",
                "1",
                "1",
                "1",
                "5",
                "2",
                "A",
                None,
                "PL",
                "N",
            ),
        ],
        [
            "aut_code",
            "aut_reve_stat",
            "aut_bin_type",
            "aut_tran_code",
            "aut_user",
            "aut_sour_inte_code",
            "aut_prim_acct_numb_f002",
            "aut_requ_syst_time",
            "partitiondate",
            "aut_tran_amou_f004",
            "aut_bill_amou_f006",
            "aut_acco_id1_f102",
            "aut_card_accp_id_code_f042",
            "aut_resp_code_f039",
            "aut_bin_iden",
            "aut_tran_curr_f049",
            "aut_acqr_inst_id_code_f032",
            "aut_forw_inst_id_code_f033",
            "aut_merc_type_f018",
            "aut_acqr_inst_coun_code_f019",
            "aut_card_data_inpt_mode_f22_09",
            "aut_cert_numb_f048_11",
            "aut_addi_data_f048",
            "aut_merc_dom",
        ],
    )

    information_compte = spark.createDataFrame(
        [
            ("T1", "C11"),
            ("T1", "C12"),
            ("T2", "C2"),
            ("T3", "C3"),
            ("T4", "C4"),
        ],
        ["numerotiers", "numerodecompte"],
    )

    response_code_action = spark.createDataFrame(
        [
            ("1", "Approve"),
            ("2", "Decline"),
            ("3", "Capture"),
        ],
        ["rco_code", "rco_iden"],
    )

    authorization_response_f039 = spark.createDataFrame(
        [
            ("11", "Terminee avec succes"),
            ("22", "Erreur"),
            ("33", "Transaction Invalide"),
            ("44", "Montant Invalide"),
        ],
        ["are_code", "are_labe"],
    )

    transaction_code = spark.createDataFrame(
        [
            ("07000", "COMMISSION CENTRE"),
            ("07001", "Cash Back"),
            ("07002", "FRAIS DEMANDE SOLDE"),
            ("07003", "PAIEMENT FACTURE"),
        ],
        ["tco_code", "tco_labe"],
    )

    currency = spark.createDataFrame(
        [
            ("1", "MAD"),
            ("2", "EUR"),
            ("3", "USD"),
            ("4", "FCFA"),
        ],
        ["cur_ide", "cur_alph_code"],
    )

    card_program = spark.createDataFrame(
        [
            ("1", "Daba"),
            ("2", "VISA"),
            ("3", "Silver"),
            ("4", "Platinium"),
        ],
        ["cpr_code", "cpr_labe"],
    )

    card = spark.createDataFrame(
        [
            ("ID1", "1", "2022-10-05", None, "2027-10-04", None),
            ("ID2", "1", "2024-01-15", None, "2029-01-14", None),
            ("ID3", "2", "2019-02-10", "2024-02-11", "2024-02-09", "2029-02-10"),
            ("ID4", "3", "2018-10-25", "2023-10-26", "2023-10-24", "2028-10-25"),
            ("ID5", "4", "2024-10-09", None, "2029-10-08", None),
        ],
        [
            "car_numb",
            "car_cpr_code",
            "car_firs_crea_date",
            "car_rene_date",
            "car_expi_date",
            "car_rene_new_expi_date",
        ],
    )

    interfaces = spark.createDataFrame(
        [
            ("79", "14"),
            ("75", "14"),
            ("95", "14"),
            ("80", "4"),
            ("72", "14"),
        ],
        ["int_code", "int_ity_code"],
    )

    merchant_activity = spark.createDataFrame(
        [
            ("1", "RESTURANTS"),
            ("2", "SUPERMARKETS"),
            ("3", "BEAUTY SHOPS"),
            ("4", "GAMES STORES"),
            ("5", "BOOK STORES"),
        ],
        ["mac_iden", "mac_labe"],
    )

    cdm_operator_reco_detail = spark.createDataFrame(
        [
            ("1", "07000", "1", "ID1", 10, "0"),
            ("2", "07000", "1", "ID1", 11, "1"),
            ("3", "07003", "3", "ID3", 13, "2"),
            ("4", "07002", "2", "ID2", 12, "3"),
            ("5", "07001", "1", "ID1", 11, "4"),
            ("6", "07000", "1", "ID1", 10, "5"),
        ],
        [
            "cor_aut_code",
            "cor_tco_code",
            "cor_cor_code",
            "cor_card_numb",
            "cor_amount",
            "cor_ate_num",
        ],
    )

    cdm_operator_reconciliation = spark.createDataFrame(
        [
            ("1", "1"),
            ("2", "2"),
            ("3", "2"),
            ("4", "3"),
            ("5", "1"),
        ],
        ["cor_code", "cor_oper_code"],
    )

    atm_utility_operator = spark.createDataFrame(
        [
            ("1", "Lydec"),
            ("2", "Meditel"),
            ("3", "IAM"),
            ("4", "INWI"),
            ("5", "Orange"),
        ],
        ["auo_code", "auo_corp_name"],
    )

    actual = achat_gab_cdm_cdm_iam_meditel(
        cdm_operator_reco_detail,
        authorization,
        interfaces,
        merchant_activity,
        card,
        card_program,
        currency,
        transaction_code,
        cdm_operator_reconciliation,
        atm_utility_operator,
        authorization_response_f039,
        response_code_action,
        information_compte,
    )

    expected = pd.DataFrame(
        [
            (
                "2",
                "T2",
                "C2",
                "ON LINE",
                "PAIEMENT GAB CDM - CARTE CDM",
                "PAIEMENT GAB",
                "COMMISSION CENTRE LYDEC",
                "GAB",
                "01",
                "CDM",
                "MOROCCO",
                "BEAUTY SHOPS",
                "ID1",
                "2024-01-15",
                None,
                "2029-01-14",
                "CDM",
                "MOROCCO",
                "00",
                "DABA",
                "MAD",
                11,
                "2024-10-10",
                "10",
                "2024",
                "2024-10-10",
                "Terminee avec succes",
                "Approve",
                "111",
                11,
            ),
            (
                "4",
                "T3",
                "C3",
                "ON LINE",
                "PAIEMENT GAB CDM - CARTE CDM",
                "PAIEMENT GAB",
                "COMMISSION CENTRE MEDITEL",
                "GAB",
                "03",
                "CDM",
                "MOROCCO",
                "SUPERMARKETS",
                "ID2",
                "2019-02-10",
                "2024-02-11",
                "2029-02-10",
                "CDM",
                "MOROCCO",
                "00",
                "VISA",
                "MAD",
                12,
                "2024-10-10",
                "10",
                "2024",
                "2024-10-10",
                "Terminee avec succes",
                "Approve",
                "111",
                12,
            ),
        ],
        columns=[
            "tra_num_transaction",
            "numerotiers",
            "numerodecompte",
            "tra_mode_transaction",
            "tra_categorie_transaction",
            "tra_type_transaction",
            "tra_lib_transaction",
            "tra_type_terminal",
            "tra_num_terminal",
            "tra_bq_terminal",
            "tra_pays_terminal",
            "tra_activite_commercant",
            "tra_num_porteur",
            "car_date_souscription",
            "car_date_renouvellement",
            "car_date_expiration",
            "tra_bq_porteur",
            "tra_pays_porteur",
            "tra_bin_iden",
            "tra_type_carte",
            "tra_code_devise",
            "tra_mt_transaction",
            "tra_date_transaction",
            "tra_mois_transaction",
            "tra_annee_transaction",
            "tra_date_traitement",
            "tra_reponse_autorisation",
            "tra_reponse_action",
            "tra_code_reponse",
            "tra_montant_dh",
        ],
    )

    compare_dataframes(actual, expected, sort_by=["tra_num_transaction"])


def test_achat_gab_cdm_cdm_lydec(spark):
    authorization = spark.createDataFrame(
        [
            (
                "1",
                "N",
                "3",
                "07003",
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C11",
                "T1",
                "111",
                "00",
                "1",
                "1",
                "1",
                "4",
                "1",
                "9",
                None,
                "MD",
                "W",
            ),
            (
                "2",
                "N",
                "3",
                "07000",
                None,
                "79",
                "ID2",
                "2024-10-10",
                "2024-10-10",
                11,
                11,
                "0000000000C2",
                "T1",
                "111",
                "00",
                "1",
                "2",
                "2",
                "3",
                "1",
                "S",
                "0002",
                "VI",
                "W",
            ),
            (
                "3",
                "N",
                "2",
                "07000",
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C12",
                "T2",
                "122",
                "00",
                "1",
                "5",
                "5",
                "1",
                "1",
                "T",
                "0004",
                "PL",
                "W",
            ),
            (
                "4",
                "N",
                "3",
                "07000",
                None,
                "75",
                "ID3",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                "0000000000C3",
                "T3",
                "111",
                "00",
                "1",
                "4",
                "5",
                "2",
                "4",
                "U",
                "0002",
                "VI",
                "N",
            ),
            (
                "5",
                "N",
                "2",
                None,
                "ATM",
                "73",
                "ID4",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                None,
                "T2",
                "422",
                "00",
                "1",
                "2",
                "2",
                "1",
                "3",
                "V",
                "0002",
                "VI",
                "N",
            ),
            (
                "6",
                "W",
                "3",
                None,
                None,
                "75",
                "ID5",
                "2024-10-10",
                "2024-10-10",
                5,
                5,
                "0000000000C4",
                "T3",
                "233",
                "00",
                "1",
                "1",
                "1",
                "5",
                "2",
                "A",
                None,
                "PL",
                "N",
            ),
        ],
        [
            "aut_code",
            "aut_reve_stat",
            "aut_bin_type",
            "aut_tran_code",
            "aut_user",
            "aut_sour_inte_code",
            "aut_prim_acct_numb_f002",
            "aut_requ_syst_time",
            "partitiondate",
            "aut_tran_amou_f004",
            "aut_bill_amou_f006",
            "aut_acco_id1_f102",
            "aut_card_accp_id_code_f042",
            "aut_resp_code_f039",
            "aut_bin_iden",
            "aut_tran_curr_f049",
            "aut_acqr_inst_id_code_f032",
            "aut_forw_inst_id_code_f033",
            "aut_merc_type_f018",
            "aut_acqr_inst_coun_code_f019",
            "aut_card_data_inpt_mode_f22_09",
            "aut_cert_numb_f048_11",
            "aut_addi_data_f048",
            "aut_merc_dom",
        ],
    )

    information_compte = spark.createDataFrame(
        [
            ("T1", "C11"),
            ("T1", "C12"),
            ("T2", "C2"),
            ("T3", "C3"),
            ("T4", "C4"),
        ],
        ["numerotiers", "numerodecompte"],
    )

    response_code_action = spark.createDataFrame(
        [
            ("1", "Approve"),
            ("2", "Decline"),
            ("3", "Capture"),
        ],
        ["rco_code", "rco_iden"],
    )

    authorization_response_f039 = spark.createDataFrame(
        [
            ("11", "Terminee avec succes"),
            ("22", "Erreur"),
            ("33", "Transaction Invalide"),
            ("44", "Montant Invalide"),
        ],
        ["are_code", "are_labe"],
    )

    transaction_code = spark.createDataFrame(
        [
            ("07000", "COMMISSION CENTRE"),
            ("07001", "Cash Back"),
            ("07002", "FRAIS DEMANDE SOLDE"),
            ("07003", "PAIEMENT FACTURE"),
        ],
        ["tco_code", "tco_labe"],
    )

    currency = spark.createDataFrame(
        [
            ("1", "MAD"),
            ("2", "EUR"),
            ("3", "USD"),
            ("4", "FCFA"),
        ],
        ["cur_ide", "cur_alph_code"],
    )

    card_program = spark.createDataFrame(
        [
            ("1", "Daba"),
            ("2", "VISA"),
            ("3", "Silver"),
            ("4", "Platinium"),
        ],
        ["cpr_code", "cpr_labe"],
    )

    card = spark.createDataFrame(
        [
            ("ID1", "1", "2022-10-05", None, "2027-10-04", None),
            ("ID2", "1", "2024-01-15", None, "2029-01-14", None),
            ("ID3", "2", "2019-02-10", "2024-02-11", "2024-02-09", "2029-02-10"),
            ("ID4", "3", "2018-10-25", "2023-10-26", "2023-10-24", "2028-10-25"),
            ("ID5", "4", "2024-10-09", None, "2029-10-08", None),
        ],
        [
            "car_numb",
            "car_cpr_code",
            "car_firs_crea_date",
            "car_rene_date",
            "car_expi_date",
            "car_rene_new_expi_date",
        ],
    )

    interfaces = spark.createDataFrame(
        [
            ("79", "14"),
            ("75", "14"),
            ("95", "14"),
            ("80", "14"),
            ("72", "14"),
        ],
        ["int_code", "int_ity_code"],
    )

    merchant_activity = spark.createDataFrame(
        [
            ("1", "RESTURANTS"),
            ("2", "SUPERMARKETS"),
            ("3", "BEAUTY SHOPS"),
            ("4", "GAMES STORES"),
            ("5", "BOOK STORES"),
        ],
        ["mac_iden", "mac_labe"],
    )

    lydec_transaction_arrete = spark.createDataFrame(
        [
            ("1", 10),
            ("3", 20),
            ("9", 30),
            ("10", 40),
            ("11", 50),
        ],
        ["lygb_atr_code", "lygb_montant"],
    )

    actual = achat_gab_cdm_cdm_lydec(
        lydec_transaction_arrete,
        authorization,
        interfaces,
        merchant_activity,
        card,
        card_program,
        currency,
        transaction_code,
        authorization_response_f039,
        response_code_action,
        information_compte,
    )

    expected = pd.DataFrame(
        [
            (
                "1",
                "T1",
                "C11",
                "ON LINE",
                "PAIEMENT GAB CDM - CARTE CDM",
                "PAIEMENT GAB",
                "PAIEMENT FACTURE LYDEC",
                "GAB",
                "T1",
                "CDM",
                "MOROCCO",
                "GAMES STORES",
                "ID1",
                "2022-10-05",
                None,
                "2027-10-04",
                "CDM",
                "MOROCCO",
                "00",
                "DABA",
                "MAD",
                10,
                "2024-10-10",
                "10",
                "2024",
                "2024-10-10",
                "Terminee avec succes",
                "Approve",
                "111",
                10,
            )
        ],
        columns=[
            "tra_num_transaction",
            "numerotiers",
            "numerodecompte",
            "tra_mode_transaction",
            "tra_categorie_transaction",
            "tra_type_transaction",
            "tra_lib_transaction",
            "tra_type_terminal",
            "tra_num_terminal",
            "tra_bq_terminal",
            "tra_pays_terminal",
            "tra_activite_commercant",
            "tra_num_porteur",
            "car_date_souscription",
            "car_date_renouvellement",
            "car_date_expiration",
            "tra_bq_porteur",
            "tra_pays_porteur",
            "tra_bin_iden",
            "tra_type_carte",
            "tra_code_devise",
            "tra_mt_transaction",
            "tra_date_transaction",
            "tra_mois_transaction",
            "tra_annee_transaction",
            "tra_date_traitement",
            "tra_reponse_autorisation",
            "tra_reponse_action",
            "tra_code_reponse",
            "tra_montant_dh",
        ],
    )

    compare_dataframes(actual, expected, sort_by=["tra_num_transaction"])


def test_achat_ecom_tpe(spark):
    authorization = spark.createDataFrame(
        [
            (
                "1",
                "N",
                "1",
                "05000",
                "ATM",
                "80",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                10,
                10,
                "0000000000C11",
                "T1",
                "000",
                "00",
                "1",
                "1",
                "1",
                "4",
                "1",
                "9",
                None,
                "MD",
                "W",
            ),
            (
                "2",
                "N",
                "3",
                "07000",
                None,
                "79",
                "ID2",
                "2024-10-10",
                "2024-10-10",
                11,
                11,
                "0000000000C2",
                "T1",
                "000",
                "00",
                "1",
                "2",
                "2",
                "3",
                "1",
                "S",
                "0002",
                "VI",
                "W",
            ),
            (
                "3",
                "N",
                "2",
                "25000",
                "ATM",
                "79",
                "ID1",
                "2024-10-10",
                "2024-10-10",
                30,
                30,
                "0000000000C12",
                "T2",
                "000",
                "00",
                "1",
                "5",
                "5",
                "1",
                "5",
                "T",
                "0004",
                "PL",
                "W",
            ),
            (
                "4",
                "N",
                "3",
                "35000",
                None,
                "75",
                "ID3",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                "0000000000C3",
                "T3",
                "100",
                "00",
                "2",
                "4",
                "5",
                "2",
                "4",
                "U",
                "0002",
                "VI",
                "N",
            ),
            (
                "5",
                "N",
                "2",
                None,
                "ATM",
                "73",
                "ID4",
                "2024-10-10",
                "2024-10-10",
                12,
                12,
                None,
                "T2",
                "001",
                "00",
                "1",
                "2",
                "2",
                "1",
                "3",
                "V",
                "0002",
                "VI",
                "N",
            ),
            (
                "6",
                "W",
                "3",
                "05000",
                None,
                "75",
                "ID5",
                "2024-10-10",
                "2024-10-10",
                5,
                5,
                "0000000000C4",
                "T3",
                "000",
                "00",
                "1",
                "1",
                "1",
                "5",
                "1",
                "A",
                None,
                "PL",
                "N",
            ),
        ],
        [
            "aut_code",
            "aut_reve_stat",
            "aut_bin_type",
            "aut_tran_code",
            "aut_user",
            "aut_sour_inte_code",
            "aut_prim_acct_numb_f002",
            "aut_requ_syst_time",
            "partitiondate",
            "aut_tran_amou_f004",
            "aut_bill_amou_f006",
            "aut_acco_id1_f102",
            "aut_card_accp_id_code_f042",
            "aut_resp_code_f039",
            "aut_bin_iden",
            "aut_tran_curr_f049",
            "aut_acqr_inst_id_code_f032",
            "aut_forw_inst_id_code_f033",
            "aut_merc_type_f018",
            "aut_acqr_inst_coun_code_f019",
            "aut_card_data_inpt_mode_f22_09",
            "aut_cert_numb_f048_11",
            "aut_addi_data_f048",
            "aut_merc_dom",
        ],
    )

    information_compte = spark.createDataFrame(
        [
            ("T1", "C11"),
            ("T1", "C12"),
            ("T2", "C2"),
            ("T3", "C3"),
            ("T4", "C4"),
        ],
        ["numerotiers", "numerodecompte"],
    )

    transaction_code = spark.createDataFrame(
        [
            ("15000", "PAIEMENT COMMERCANT"),
            ("35000", "PAIEMENT COMMERCANT"),
            ("25000", "PAIEMENT COMMERCANT"),
            ("05000", "PAIEMENT COMMERCANT"),
        ],
        ["tco_code", "tco_labe"],
    )

    currency = spark.createDataFrame(
        [
            ("1", "MAD"),
            ("2", "EUR"),
            ("3", "USD"),
            ("4", "FCFA"),
        ],
        ["cur_ide", "cur_alph_code"],
    )

    card_program = spark.createDataFrame(
        [
            ("1", "Daba"),
            ("2", "VISA"),
            ("3", "Silver"),
            ("4", "Platinium"),
        ],
        ["cpr_code", "cpr_labe"],
    )

    card = spark.createDataFrame(
        [
            ("ID1", "1", "2022-10-05", None, "2027-10-04", None),
            ("ID2", "1", "2024-01-15", None, "2029-01-14", None),
            ("ID3", "2", "2019-02-10", "2024-02-11", "2024-02-09", "2029-02-10"),
            ("ID4", "3", "2018-10-25", "2023-10-26", "2023-10-24", "2028-10-25"),
            ("ID5", "4", "2024-10-09", None, "2029-10-08", None),
        ],
        [
            "car_numb",
            "car_cpr_code",
            "car_firs_crea_date",
            "car_rene_date",
            "car_expi_date",
            "car_rene_new_expi_date",
        ],
    )

    country = spark.createDataFrame(
        [
            ("1", "MOROCCO"),
            ("2", "CONGO"),
            ("3", "ALGERIE"),
            ("4", "FRANCE"),
            ("5", "USA"),
        ],
        ["cou_iden", "cou_name"],
    )

    merchant_activity = spark.createDataFrame(
        [
            ("1", "RESTURANTS"),
            ("2", "SUPERMARKETS"),
            ("3", "BEAUTY SHOPS"),
            ("4", "GAMES STORES"),
            ("5", "BOOK STORES"),
        ],
        ["mac_iden", "mac_labe"],
    )

    actual = achat_ecom_tpe(
        authorization,
        country,
        merchant_activity,
        card,
        card_program,
        currency,
        transaction_code,
        information_compte,
    )

    expected = pd.DataFrame(
        [
            (
                "1",
                "T1",
                "C11",
                "ON LINE",
                "PAIEMENT E-COM NATIONAL",
                "PAIEMENT NATIONAL",
                "PAIEMENT COMMERCANT",
                "INTERNET",
                "T1",
                "CMI",
                "MOROCCO",
                "GAMES STORES",
                "ID1",
                "2022-10-05",
                None,
                "2027-10-04",
                "CDM",
                "MOROCCO",
                "00",
                "DABA",
                "MAD",
                10,
                "2024-10-10",
                "10",
                "2024",
                "2024-10-10",
                "Terminee avec succes",
                "Approve",
                "000",
                10,
            ),
            (
                "3",
                "T1",
                "C12",
                "ON LINE",
                "PAIEMENT E-COM INTERNATIONAL",
                "PAIEMENT INTERNATIONAL",
                "PAIEMENT COMMERCANT",
                "INTERNET",
                "T2",
                "ETRANGER",
                "USA",
                "RESTURANTS",
                "ID1",
                "2022-10-05",
                None,
                "2027-10-04",
                "CDM",
                "MOROCCO",
                "00",
                "DABA",
                "MAD",
                30,
                "2024-10-10",
                "10",
                "2024",
                "2024-10-10",
                "Terminee avec succes",
                "Approve",
                "000",
                30,
            ),
            (
                "6",
                "T4",
                "C4",
                "ON LINE",
                "PAIEMENT TPE NATIONAL",
                "PAIEMENT NATIONAL",
                "PAIEMENT COMMERCANT",
                "TPE",
                "T3",
                "CMI",
                "MOROCCO",
                "BOOK STORES",
                "ID5",
                "2024-10-09",
                None,
                "2029-10-08",
                "CDM",
                "MOROCCO",
                "00",
                "PLATINIUM",
                "MAD",
                5,
                "2024-10-10",
                "10",
                "2024",
                "2024-10-10",
                "Terminee avec succes",
                "Approve",
                "000",
                5,
            ),
        ],
        columns=[
            "tra_num_transaction",
            "numerotiers",
            "numerodecompte",
            "tra_mode_transaction",
            "tra_categorie_transaction",
            "tra_type_transaction",
            "tra_lib_transaction",
            "tra_type_terminal",
            "tra_num_terminal",
            "tra_bq_terminal",
            "tra_pays_terminal",
            "tra_activite_commercant",
            "tra_num_porteur",
            "car_date_souscription",
            "car_date_renouvellement",
            "car_date_expiration",
            "tra_bq_porteur",
            "tra_pays_porteur",
            "tra_bin_iden",
            "tra_type_carte",
            "tra_code_devise",
            "tra_mt_transaction",
            "tra_date_transaction",
            "tra_mois_transaction",
            "tra_annee_transaction",
            "tra_date_traitement",
            "tra_reponse_autorisation",
            "tra_reponse_action",
            "tra_code_reponse",
            "tra_montant_dh",
        ],
    )

    compare_dataframes(actual, expected, sort_by=["tra_num_transaction"])
