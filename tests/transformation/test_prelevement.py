import pandas as pd

from src.transformation.prelevement import (
    build_prelevement_contrat,
    build_prelevement_contrat_approvisionne,
    build_stock_contrat_banque,
)
from tests.conftest import compare_dataframes


def test_build_prelevement_contrat(spark):
    contrat = spark.createDataFrame(
        [
            (
                "numContratInt_1",
                "numContratEX_1",
                "typeContrat_1",
                "agGest_1",
                "3",
                "2024-10-02",
                "2024-10-10",
            ),
            (
                "numContratInt_2",
                "numContratEX_2",
                "typeContrat_2",
                "agGest_2",
                "7",
                "2024-10-20",
                "2024-10-10",
            ),
            (
                "numContratInt_3",
                "numContratEX_3",
                "typeContrat_3",
                "agGest_3",
                "7",
                "2024-10-03",
                "2024-10-10",
            ),
            (
                "numContratInt_4",
                "numContratEX_4",
                "typeContrat_4",
                "agGest_4",
                "3",
                "2024-10-04",
                "2024-10-10",
            ),
            (
                "numContratInt_5",
                "numContratEX_5",
                "typeContrat_5",
                "agGest_5",
                "S",
                "2024-10-05",
                "2024-10-10",
            ),
            (
                "numContratInt_6",
                "numContratEX_6",
                "typeContrat_6",
                "agGest_6",
                "T",
                "2024-10-06",
                "2024-10-10",
            ),
            (
                "numContratInt_7",
                "numContratEX_7",
                "typeContrat_7",
                "agGest_7",
                "8",
                "2024-10-07",
                "2024-10-10",
            ),
            (
                "numContratInt_8",
                "numContratEX_8",
                "typeContrat_8",
                "agGest_8",
                "D",
                "2024-10-08",
                "2024-10-10",
            ),
            (
                "numContratInt_9",
                "numContratEX_9",
                "typeContrat_9",
                "agGest_9",
                "E",
                "2024-10-09",
                "2024-10-10",
            ),
            (
                "numContratInt_10",
                "numContratEX_10",
                "EX01",
                "agGest_10",
                "3",
                "2024-10-02",
                "2024-10-10",
            ),
            (
                "numContratInt_11",
                "numContratEX_11",
                "EX01",
                "agGest_11",
                "3",
                "2024-10-02",
                "2024-10-10",
            ),
        ],
        [
            "numerocontratinterne",
            "numerocontratexterne",
            "typecontrat",
            "agencegestionnaire",
            "etatcontrat",
            "dateecheance",
            "partitiondate",
        ],
    )

    mouvement_position = spark.createDataFrame(
        [
            (
                "numCompte_1",
                "2024-10-02",
                1000,
                "refop1",
                "Facture payee",
                "numContratInt_1",
                "numContratEX_1",
                "OCI",
                "1",
                "typeopetest",
                "MAD",
                "2024-10-01",
            ),
            (
                "numCompte_2",
                "2024-10-02",
                2000,
                "refop2",
                "Facture payee888",
                "numContratInt_2",
                "numContratEX_2",
                "OCI",
                "1",
                "typeopetest",
                "MAD",
                "2024-10-01",
            ),
            (
                "numCompte_3",
                "2024-10-02",
                3000,
                "refop3",
                "Facture paye",
                "numContratInt_3",
                "numContratEX_3",
                "OCI",
                "1",
                "typeopetest",
                "MAD",
                "2024-10-01",
            ),
            (
                "numCompte_4",
                "2024-10-02",
                4000,
                "refop4",
                "**Facture payee",
                "numContratInt_4",
                "numContratEX_4",
                "OCI",
                "1",
                "typeopetest",
                "MAD",
                "2024-10-01",
            ),
            (
                "numCompte_10",
                "2024-10-02",
                1000,
                "refop10",
                "Facture payee",
                "numContratInt_10",
                "numContratEX_10",
                "OCI",
                "1",
                "99S95",
                "MAD",
                "2024-10-01",
            ),
            (
                "numCompte_5",
                "2024-10-02",
                5000,
                "refop5",
                "",
                "numContratInt_5",
                "numContratEX_5",
                "OCI",
                "1",
                "typeopetest",
                "MAD",
                "2024-10-01",
            ),
            (
                "numCompte_6",
                "2024-10-02",
                6000,
                "refop6",
                "Facture ",
                "numContratInt_6",
                "numContratEX_6",
                "OCI",
                "1",
                "typeopetest",
                "MAD",
                "2024-10-01",
            ),
            (
                "numCompte_7",
                "2024-10-02",
                7000,
                "refop7",
                "Facture==payee",
                "numContratInt_7",
                "numContratEX_7",
                "OCI",
                "1",
                "typeopetest",
                "MAD",
                "2024-10-01",
            ),
            (
                "numCompte_8",
                "2024-10-02",
                8000,
                "refop8",
                "Facture payee---",
                "numContratInt_8",
                "numContratEX_8",
                "OCI",
                "1",
                "typeopetest",
                "MAD",
                "2024-10-01",
            ),
            (
                "numCompte_9",
                "2024-10-02",
                9000,
                "refop9",
                "nothing",
                "numContratInt_9",
                "numContratEX_X",
                "OCI",
                "1",
                "typeopetest",
                "MAD",
                "2024-10-01",
            ),
            (
                "numCompte_11",
                "2024-10-02",
                1000,
                "refop11",
                "Facture payee",
                "numContratInt_11",
                "numContratEX_11",
                "OCI",
                "1",
                "99S93",
                "MAD",
                "2024-10-01",
            ),
        ],
        [
            "numerodecompte",
            "dtvaleur",
            "montant",
            "refope",
            "motif",
            "refdocumentaire",
            "refcli",
            "statut",
            "sens",
            "typeope",
            "devise",
            "dtope",
        ],
    )

    exploit_typecontrat = spark.createDataFrame(
        [
            ("libcontrat_1", "typeContrat_1", "2024-10-12", "2024-10-10"),
            ("libcontrat_2", "typeContrat_2", "2024-10-13", "2024-10-10"),
            ("libcontrat_3", "typeContrat_3", "2024-10-14", "2024-10-10"),
            ("libcontrat_4", "typeContrat_4", "2024-10-15", "2024-10-10"),
            ("libcontrat_5", "typeContrat_5", "2024-10-16", "2024-10-10"),
            ("libcontrat_6", "typeContrat_6", "2024-10-17", "2024-10-10"),
            ("libcontrat_7", "typeContrat_7", "2024-10-18", "2024-10-10"),
            ("libcontrat_8", "typeContrat_8", "2024-10-19", "2024-10-10"),
            ("libcontrat_9", "typeContrat_9", "2024-10-09", "2024-10-10"),
            ("libcontrat_EX01", "EX01", "2024-10-11", "2024-10-10"),
        ],
        ["libcontrat", "typecontrat", "dfval", "partitiondate"],
    )

    exploit_souscompte = spark.createDataFrame(
        [
            (
                "numCompte_1",
                "0",
            ),
            (
                "numCompte_2",
                "1",
            ),
            (
                "numCompte_3",
                "3",
            ),
            (
                "numCompte_4",
                "5",
            ),
            (
                "numCompte_5",
                "2",
            ),
            (
                "numCompte_6",
                "6",
            ),
            (
                "numCompte_7",
                "7",
            ),
            (
                "numCompte_8",
                "8",
            ),
            (
                "numCompte_9",
                "0",
            ),
            (
                "numCompte_10",
                "0",
            ),
            (
                "numCompte_11",
                "0",
            ),
        ],
        ["numerodecompte", "etatcompte"],
    )

    sage_decodage = spark.createDataFrame(
        [
            ("0", "EtatCompte", "Ouvert,non confirme", "2024-10-12", "2024-10-10"),
            ("0", "EtatContrat", "Annulee", "2024-10-12", "2024-10-10"),
            ("1", "EtatCompte", "Ouvert confirme", "2024-10-12", "2024-10-10"),
            ("1", "EtatContrat", "A editer", "2024-10-12", "2024-10-10"),
            ("2", "EtatCompte", "Candidat a la cloture", "2024-10-12", "2024-10-10"),
            ("2", "EtatContrat", "Clos", "2024-10-12", "2024-10-10"),
            ("3", "EtatCompte", "Cloture", "2024-10-12", "2024-10-10"),
            ("3", "EtatContrat", "Valide", "2024-10-12", "2024-10-10"),
            ("5", "EtatCompte", "A clore", "2024-10-12", "2024-10-10"),
            ("5", "EtatContrat", "Resilie", "2024-10-12", "2024-10-10"),
            ("6", "EtatCompte", "Bloque", "2024-10-12", "2024-10-10"),
            ("6", "EtatContrat", "Modifie", "2024-10-12", "2024-10-10"),
            ("7", "EtatCompte", "A arreter", "2024-10-12", "2024-10-10"),
            (
                "7",
                "EtatContrat",
                "Valide non renouvelable",
                "2024-10-12",
                "2024-10-10",
            ),
            ("8", "EtatCompte", "Demande a la cloture", "2024-10-12", "2024-10-10"),
            ("8", "EtatContrat", "Commande", "2024-10-12", "2024-10-10"),
            (
                "S",
                "EtatContrat",
                "A RENOUVELER PROVISION INSUFFISANTE",
                "2024-10-12",
                "2024-10-10",
            ),
            (
                "T",
                "EtatContrat",
                "A DECIDER RENOUVELLEMENT",
                "2024-10-12",
                "2024-10-10",
            ),
            (
                "D",
                "EtatContrat",
                "Commande, demande de la resiliation",
                "2024-10-12",
                "2024-10-10",
            ),
        ],
        ["valeurcode", "motcle", "valeurdecode", "dfval", "partitiondate"],
    )

    titulaire = spark.createDataFrame(
        [
            (
                "Tier_1",
                "numContratInt_1",
            ),
            (
                "Tier_2",
                "numContratInt_2",
            ),
            (
                "Tier_3",
                "numContratInt_3",
            ),
            (
                "Tier_4",
                "numContratInt_4",
            ),
            (
                "Tier_5",
                "numContratInt_5",
            ),
            (
                "Tier_6",
                "numContratInt_6",
            ),
            (
                "Tier_7",
                "numContratInt_7",
            ),
            (
                "Tier_8",
                "numContratInt_8",
            ),
            (
                "Tier_9",
                "numContratInt_9",
            ),
            (
                "Tier_10",
                "numContratInt_10",
            ),
            (
                "Tier_11",
                "numContratInt_11",
            ),
        ],
        ["numerotiers", "numerocontratinterne"],
    )

    renouv_produit = spark.createDataFrame(
        [
            (
                "typefacturation_1",
                "typeContrat_1",
                "2024-10-12",
                "2024-10-10",
            ),
            (
                "typefacturation_2",
                "typeContrat_2",
                "2024-10-13",
                "2024-10-10",
            ),
            (
                "typefacturation_3",
                "typeContrat_3",
                "2024-10-14",
                "2024-10-10",
            ),
            (
                "typefacturation_4",
                "typeContrat_4",
                "2024-10-16",
                "2024-10-10",
            ),
            (
                "typefacturation_5",
                "typeContrat_5",
                "2024-10-17",
                "2024-10-10",
            ),
            (
                "typefacturation_6",
                "typeContrat_6",
                "2024-10-18",
                "2024-10-10",
            ),
            (
                "typefacturation_7",
                "typeContrat_7",
                "2024-10-19",
                "2024-10-10",
            ),
            (
                "typefacturation_8",
                "typeContrat_8",
                "2024-10-19",
                "2024-10-10",
            ),
            (
                "typefacturation_9",
                "typeContrat_9",
                "2024-10-02",
                "2024-10-10",
            ),
            (
                "typefacturation_ex01_1",
                "EX01",
                "2024-10-12",
                "2024-10-10",
            ),
            (
                "typefacturation_ex01_2",
                "EX01",
                "2024-10-12",
                "2024-10-10",
            ),
            (
                "typefacturation_ex01_2",
                "EX01",
                "2024-10-12",
                "2024-10-10",
            ),
        ],
        ["typefacturation", "typecontrat", "dfval", "partitiondate"],
    )

    categorie_assurance = spark.createDataFrame(
        [
            ("typeContrat_1",),
            ("typeContrat_2",),
            ("typeContrat_3",),
            ("typeContrat_4",),
            ("typeContrat_5",),
        ],
        ["typecontrat"],
    )

    expected = pd.DataFrame(
        [
            (
                "numCompte_1",
                "numContratInt_1",
                "numContratEX_1",
                "typefacturation_1",
                "typeopetest",
                "typeContrat_1",
                "Tier_1",
                "agGest_1",
                "VALIDE",
                "2024-10-02",
                10,
                "refop1",
                "Facture payee",
                True,
                "libcontrat_1",
                "Ouvert,non confirme",
                "Valide",
                "produit non bancaire",
                "MAD",
                "2024-10-01",
                "3",
            ),
            (
                "numCompte_2",
                "numContratInt_2",
                "numContratEX_2",
                "typefacturation_2",
                "typeopetest",
                "typeContrat_2",
                "Tier_2",
                "agGest_2",
                "VALIDE",
                "2024-10-02",
                20,
                "refop2",
                "Facture payee888",
                True,
                "libcontrat_2",
                "Ouvert confirme",
                "Valide non renouvelable",
                "produit non bancaire",
                "MAD",
                "2024-10-01",
                "7",
            ),
            (
                "numCompte_3",
                "numContratInt_3",
                "numContratEX_3",
                "typefacturation_3",
                "typeopetest",
                "typeContrat_3",
                "Tier_3",
                "agGest_3",
                "NONVALIDE",
                "2024-10-02",
                30,
                "refop3",
                "Facture paye",
                False,
                "libcontrat_3",
                "Cloture",
                "Valide non renouvelable",
                "produit non bancaire",
                "MAD",
                "2024-10-01",
                "7",
            ),
            (
                "numCompte_4",
                "numContratInt_4",
                "numContratEX_4",
                "typefacturation_4",
                "typeopetest",
                "typeContrat_4",
                "Tier_4",
                "agGest_4",
                "VALIDE",
                "2024-10-02",
                40,
                "refop4",
                "**Facture payee",
                True,
                "libcontrat_4",
                "A clore",
                "Valide",
                "produit non bancaire",
                "MAD",
                "2024-10-01",
                "3",
            ),
            (
                "numCompte_5",
                "numContratInt_5",
                "numContratEX_5",
                "typefacturation_5",
                "typeopetest",
                "typeContrat_5",
                "Tier_5",
                "agGest_5",
                "VALIDE",
                "2024-10-02",
                50,
                "refop5",
                "",
                False,
                "libcontrat_5",
                "Candidat a la cloture",
                "A RENOUVELER PROVISION INSUFFISANTE",
                "produit non bancaire",
                "MAD",
                "2024-10-01",
                "S",
            ),
            (
                "numCompte_6",
                "numContratInt_6",
                "numContratEX_6",
                "typefacturation_6",
                "typeopetest",
                "typeContrat_6",
                "Tier_6",
                "agGest_6",
                "VALIDE",
                "2024-10-02",
                60,
                "refop6",
                "Facture ",
                False,
                "libcontrat_6",
                "Bloque",
                "A DECIDER RENOUVELLEMENT",
                "produit bancaire",
                "MAD",
                "2024-10-01",
                "T",
            ),
            (
                "numCompte_7",
                "numContratInt_7",
                "numContratEX_7",
                "typefacturation_7",
                "typeopetest",
                "typeContrat_7",
                "Tier_7",
                "agGest_7",
                "NONVALIDE",
                "2024-10-02",
                70,
                "refop7",
                "Facture==payee",
                False,
                "libcontrat_7",
                "A arreter",
                "Commande",
                "produit bancaire",
                "MAD",
                "2024-10-01",
                "8",
            ),
            (
                "numCompte_8",
                "numContratInt_8",
                "numContratEX_8",
                "typefacturation_8",
                "typeopetest",
                "typeContrat_8",
                "Tier_8",
                "agGest_8",
                "NONVALIDE",
                "2024-10-02",
                80,
                "refop8",
                "Facture payee---",
                True,
                "libcontrat_8",
                "Demande a la cloture",
                "Commande, demande de la resiliation",
                "produit bancaire",
                "MAD",
                "2024-10-01",
                "D",
            ),
            (
                "numCompte_10",
                "numContratInt_10",
                "numContratEX_10",
                "A",
                "99S95",
                "EX01",
                "Tier_10",
                "agGest_10",
                "VALIDE",
                "2024-10-02",
                10,
                "refop10",
                "Facture payee",
                True,
                "libcontrat_EX01",
                "Ouvert,non confirme",
                "Valide",
                "produit bancaire",
                "MAD",
                "2024-10-01",
                "3",
            ),
            (
                "numCompte_11",
                "numContratInt_11",
                "numContratEX_11",
                "M",
                "99S93",
                "EX01",
                "Tier_11",
                "agGest_11",
                "VALIDE",
                "2024-10-02",
                10,
                "refop11",
                "Facture payee",
                True,
                "libcontrat_EX01",
                "Ouvert,non confirme",
                "Valide",
                "produit bancaire",
                "MAD",
                "2024-10-01",
                "3",
            ),
        ],
        columns=[
            "numerodecompte",
            "numerocontratinterne",
            "numerocontratexterne",
            "typefacturation",
            "typeope",
            "typecontrat",
            "numerotiers",
            "agencegestionnaire",
            "is_contrat_valid",
            "dtvaleur",
            "montant",
            "refope",
            "motif",
            "is_prelevee",
            "libcontrat",
            "SD_EtatCompte",
            "Lib_EtatContrat",
            "categorie_produit",
            "devise",
            "dtope",
            "etatcontrat",
        ],
    )

    actual = build_prelevement_contrat(
        contrat,
        mouvement_position,
        exploit_typecontrat,
        exploit_souscompte,
        sage_decodage,
        titulaire,
        renouv_produit,
        categorie_assurance,
    )

    compare_dataframes(
        actual, expected, sort_by=["numerodecompte", "numerocontratinterne"]
    )


def test_build_prelevement_contrat_approvisionne(spark):
    mouvement_position = spark.createDataFrame(
        [
            ("OAP", "refop1", "numContratInt_1", "2024-10-11", 1000),
            ("OAP", "refop2", "numContratInt_2", "2024-10-12", 2000),
            ("OAP", "refop3", "numContratInt_3", "2024-10-13", 3000),
            ("OAP", "refop4", "numContratInt_4", "2024-10-14", 4000),
            ("OAP", "refop5", "numContratInt_5", "2024-10-15", 5000),
            ("OAP", "refop6", "numContratInt_6", "2024-10-16", 6000),
        ],
        ["statut", "refope", "refdocumentaire", "dtvaleur", "montant"],
    )

    exp_contratprerenouv_banque = spark.createDataFrame(
        [
            (
                "0",
                "numCompte_1",
                "Tier_1",
                "numContratEx_1",
                "numContratInt_1",
                1,
                "codelieu1",
                "pos1",
                "typeContrat_1",
                "typefacturation_1",
                "2024-10-11",
            ),
            (
                "0",
                "numCompte_2",
                "Tier_2",
                "numContratEx_2",
                "numContratInt_2",
                2,
                "codelieu2",
                "pos2",
                "typeContrat_2",
                "typefacturation_2",
                "2024-10-12",
            ),
            (
                "0",
                "numCompte_3",
                "Tier_3",
                "numContratEx_3",
                "numContratInt_3",
                3,
                "codelieu3",
                "pos3",
                "typeContrat_3",
                "typefacturation_3",
                "2024-10-13",
            ),
            (
                "0",
                "numCompte_4",
                "Tier_4",
                "numContratEx_4",
                "numContratInt_4",
                4,
                "codelieu4",
                "pos4",
                "typeContrat_4",
                "typefacturation_4",
                "2024-10-14",
            ),
            (
                "0",
                "numCompte_5",
                "Tier_5",
                "numContratEx_5",
                "numContratInt_5",
                5,
                "codelieu5",
                "pos5",
                "typeContrat_5",
                "typefacturation_5",
                "2024-10-15",
            ),
            (
                "0",
                "numCompte_6",
                "Tier_6",
                "numContratEx_6",
                "numContratInt_6",
                6,
                "codelieu6",
                "pos6",
                "typeContrat_6",
                "typefacturation_6",
                "2024-10-16",
            ),
        ],
        [
            "etat",
            "numcompte",
            "numtiers",
            "numcontratexterne",
            "numcontratinterne",
            "lemontantttc",
            "codelieu",
            "positionminute",
            "typecontrat",
            "typefacturation",
            "datefacturation",
        ],
    )

    typecontrat = spark.createDataFrame(
        [
            ("typeContrat_1", "libContrat1"),
            ("typeContrat_2", "libContrat2"),
            ("typeContrat_3", "libContrat3"),
            ("typeContrat_4", "libContrat4"),
            ("typeContrat_5", "libContrat5"),
            ("typeContrat_6", "libContrat6"),
        ],
        ["typecontrat", "libcontrat"],
    )

    contrat = spark.createDataFrame(
        [
            (
                "numContratInt_1",
                "0",
            ),
            (
                "numContratInt_2",
                "1",
            ),
            (
                "numContratInt_3",
                "2",
            ),
            (
                "numContratInt_4",
                "3",
            ),
            (
                "numContratInt_5",
                "8",
            ),
            (
                "numContratInt_6",
                "5",
            ),
        ],
        ["numerocontratinterne", "etatcontrat"],
    )

    sous_compte = spark.createDataFrame(
        [
            (
                "numCompte_1",
                "0",
            ),
            (
                "numCompte_2",
                "1",
            ),
            (
                "numCompte_3",
                "2",
            ),
            (
                "numCompte_4",
                "3",
            ),
            (
                "numCompte_5",
                "8",
            ),
            (
                "numCompte_6",
                "5",
            ),
        ],
        ["numerodecompte", "etatcompte"],
    )

    sage_decodage = spark.createDataFrame(
        [
            ("0", "EtatCompte", "Ouvert,non confirme", "2024-10-12", "2024-10-10"),
            ("0", "EtatContrat", "Annulee", "2024-10-12", "2024-10-10"),
            ("1", "EtatCompte", "Ouvert confirme", "2024-10-12", "2024-10-10"),
            ("1", "EtatContrat", "A editer", "2024-10-12", "2024-10-10"),
            ("2", "EtatCompte", "Candidat a la cloture", "2024-10-12", "2024-10-10"),
            ("2", "EtatContrat", "Clos", "2024-10-12", "2024-10-10"),
            ("3", "EtatCompte", "Cloture", "2024-10-12", "2024-10-10"),
            ("3", "EtatContrat", "Valide", "2024-10-12", "2024-10-10"),
            ("5", "EtatCompte", "A clore", "2024-10-12", "2024-10-10"),
            ("5", "EtatContrat", "Resilie", "2024-10-12", "2024-10-10"),
            ("6", "EtatCompte", "Bloque", "2024-10-12", "2024-10-10"),
            ("6", "EtatContrat", "Modifie", "2024-10-12", "2024-10-10"),
            ("7", "EtatCompte", "A arreter", "2024-10-12", "2024-10-10"),
            (
                "7",
                "EtatContrat",
                "Valide non renouvelable",
                "2024-10-12",
                "2024-10-10",
            ),
            ("8", "EtatCompte", "Demande a la cloture", "2024-10-12", "2024-10-10"),
            ("8", "EtatContrat", "Commande", "2024-10-12", "2024-10-10"),
            (
                "S",
                "EtatContrat",
                "A RENOUVELER PROVISION INSUFFISANTE",
                "2024-10-12",
                "2024-10-10",
            ),
            (
                "T",
                "EtatContrat",
                "A DECIDER RENOUVELLEMENT",
                "2024-10-12",
                "2024-10-10",
            ),
            (
                "D",
                "EtatContrat",
                "Commande, demande de la resiliation",
                "2024-10-12",
                "2024-10-10",
            ),
        ],
        ["valeurcode", "motcle", "valeurdecode", "dfval", "partitiondate"],
    )

    actual = build_prelevement_contrat_approvisionne(
        mouvement_position,
        exp_contratprerenouv_banque,
        typecontrat,
        contrat,
        sous_compte,
        sage_decodage,
    )

    expected = pd.DataFrame(
        [
            (
                "refop1",
                "numContratInt_1",
                "2024-10-11",
                10,
                "numCompte_1",
                "Tier_1",
                "numContratEx_1",
                1,
                "codelieu1",
                "pos1",
                "typeContrat_1",
                "typefacturation_1",
                "libContrat1",
                "0",
                "Annulee",
                "Ouvert,non confirme",
            ),
            (
                "refop2",
                "numContratInt_2",
                "2024-10-12",
                20,
                "numCompte_2",
                "Tier_2",
                "numContratEx_2",
                2,
                "codelieu2",
                "pos2",
                "typeContrat_2",
                "typefacturation_2",
                "libContrat2",
                "1",
                "A editer",
                "Ouvert confirme",
            ),
            (
                "refop3",
                "numContratInt_3",
                "2024-10-13",
                30,
                "numCompte_3",
                "Tier_3",
                "numContratEx_3",
                3,
                "codelieu3",
                "pos3",
                "typeContrat_3",
                "typefacturation_3",
                "libContrat3",
                "2",
                "Clos",
                "Candidat a la cloture",
            ),
            (
                "refop4",
                "numContratInt_4",
                "2024-10-14",
                40,
                "numCompte_4",
                "Tier_4",
                "numContratEx_4",
                4,
                "codelieu4",
                "pos4",
                "typeContrat_4",
                "typefacturation_4",
                "libContrat4",
                "3",
                "Valide",
                "Cloture",
            ),
            (
                "refop5",
                "numContratInt_5",
                "2024-10-15",
                50,
                "numCompte_5",
                "Tier_5",
                "numContratEx_5",
                5,
                "codelieu5",
                "pos5",
                "typeContrat_5",
                "typefacturation_5",
                "libContrat5",
                "8",
                "Commande",
                "Demande a la cloture",
            ),
            (
                "refop6",
                "numContratInt_6",
                "2024-10-16",
                60,
                "numCompte_6",
                "Tier_6",
                "numContratEx_6",
                6,
                "codelieu6",
                "pos6",
                "typeContrat_6",
                "typefacturation_6",
                "libContrat6",
                "5",
                "Resilie",
                "A clore",
            ),
        ],
        columns=[
            "refope",
            "numerocontratinterne",
            "datefacturation",
            "montant",
            "numerodecompte",
            "numerotiers",
            "numerocontratexterne",
            "montant_ttc",
            "code_lieu",
            "position_compte",
            "typecontrat",
            "typefacturation",
            "libcontrat",
            "etatcontrat",
            "Lib_EtatContrat",
            "SD_EtatCompte",
        ],
    )

    compare_dataframes(actual, expected, sort_by=["refope"])


def test_build_stock_contrat_banque(spark):
    cp = spark.createDataFrame(
        [
            (
                "1",
                "123",
                "1",
                "5",
                "2024-07-07",
                "6",
                "2024-07-07",
                "5",
                "2024-07-07",
                "1",
            ),
            (
                "2",
                "122",
                "2",
                "5",
                "2024-07-07",
                "2",
                "2024-07-07",
                "5",
                "2024-07-07",
                "2",
            ),
            (
                "3",
                "123",
                "3",
                "5",
                "2024-07-07",
                "6",
                "2024-07-07",
                "5",
                "2024-07-07",
                "3",
            ),
            (
                "4",
                "124",
                "4",
                "5",
                "2024-07-07",
                "4",
                "2024-07-07",
                "5",
                "2024-07-07",
                "4",
            ),
            (
                "1",
                "123",
                "5",
                "5",
                "2024-07-07",
                "6",
                "2024-07-07",
                "5",
                "2024-07-07",
                "5",
            ),
            (
                "6",
                "126",
                "6",
                "5",
                "2024-07-07",
                "3",
                "2024-07-07",
                "5",
                "2024-07-07",
                "6",
            ),
        ],
        [
            "numerotiers",
            "numerodecompte",
            "numerocarte",
            "etatproduit",
            "datesouscription",
            "codeproduit",
            "partitiondate",
            "numeropackage",
            "dateecheance",
            "numerocontratinterne",
        ],
    )

    it = spark.createDataFrame(
        [
            ("1", "a"),
            ("2", "b"),
            ("3", "a"),
            ("4", "d"),
            ("5", "a"),
            ("6", "f"),
        ],
        ["numerotiers", "statutclient"],
    )

    tyc = spark.createDataFrame(
        [
            ("a1", "1", "2024-07-07", "2024-07-06"),
            ("a1", "2", "2024-07-07", "2024-07-08"),
            ("a2", "3", "2024-07-07", "2024-07-08"),
            ("a3", "4", "2024-07-07", "2024-07-08"),
            ("a2", "5", "2024-07-07", "2024-07-06"),
            ("a3", "6", "2024-07-07", "2024-07-06"),
        ],
        ["libcontrat", "typecontrat", "dfval", "partitiondate"],
    )

    tyec = spark.createDataFrame(
        [
            ("a1", "1", "2024-07-07", "2024-07-06"),
            ("a1", "2", "2024-07-07", "2024-07-06"),
            ("a2", "3", "2024-07-07", "2024-07-08"),
            ("a3", "5", "2024-07-07", "2024-07-08"),
            ("a2", "5", "2024-07-07", "2024-07-06"),
            ("a3", "6", "2024-07-07", "2024-07-06"),
        ],
        ["libproduit", "typedeproduit", "dfval", "partitiondate"],
    )

    eltc = spark.createDataFrame(
        [
            ("1", "6", "2"),
            ("2", "2", "3"),
            ("3", "6", "4"),
            ("4", "4", "5"),
            ("5", "6", "6"),
            ("6", "3", "7"),
        ],
        ["numerocontratinterne", "typedeproduit", "numeroelementinterne"],
    )

    fct_avc = spark.createDataFrame(
        [("1", "2"), ("2", "3"), ("3", "4"), ("5", "6"), ("6", "7")],
        ["elementcontrat1", "elementcontrat2"],
    )

    sousc = spark.createDataFrame(
        [("1", "2"), ("2", "3"), ("3", "4"), ("5", "6"), ("6", "7")],
        ["numerodecompte", "numeroelementinterne"],
    )

    titul = spark.createDataFrame(
        [
            ("1", "1"),
            ("2", "2"),
            ("3", "3"),
            ("4", "4"),
            ("5", "5"),
            ("6", "6"),
        ],
        ["numerotiers", "numerocontratinterne"],
    )

    cc = spark.createDataFrame(
        [
            ("1", "a", "1", "5", "2024-07-07", "2024-07-07"),
            ("2", "b", "2", "5", "2024-07-07", "2024-07-07"),
            ("3", "c", "3", None, "2024-07-07", "2024-07-07"),
            ("4", "d", "4", "5", "2024-07-07", "2024-07-07"),
            ("5", "e", "5", "5", "2024-07-07", "2024-07-07"),
            ("6", "f", "6", "5", "2024-07-07", "2024-07-07"),
        ],
        [
            "numerocontratinterne",
            "etatcontrat",
            "numerocontratexterne",
            "numeropackage",
            "datesouscription",
            "dateecheance",
        ],
    )

    sg = spark.createDataFrame(
        [
            ("EtatContrat", "2024-07-07", "2024-06-06", "a", "a"),
            ("a", "2024-07-07", "2024-06-06", "b", "b"),
            ("EtatContrat", "2024-07-07", "2024-06-06", "c", "c"),
            ("EtatContrat", "2024-07-07", "2024-06-06", "d", "d"),
            ("EtatContrat", "2024-07-07", "2024-06-06", "e", "e"),
            (None, "2024-07-07", "2024-06-06", "f", "f"),
        ],
        ["motcle", "dfval", "partitiondate", "valeurdecode", "valeurcode"],
    )

    actual = build_stock_contrat_banque(
        cp,
        it,
        tyc,
        eltc,
        tyec,
        fct_avc,
        sousc,
        titul,
        cc,
        sg,
    )

    expected = pd.DataFrame(
        [
            (
                "1",
                "123",
                "1",
                "a",
                "1",
                "2024-07-07",
                "6",
                "5",
                "2024-07-07",
                "a3",
                "a",
            ),
            (
                "2",
                "122",
                "2",
                "b",
                "2",
                "2024-07-07",
                "2",
                "5",
                "2024-07-07",
                "a1",
                None,
            ),
            (
                "3",
                "123",
                "3",
                "c",
                "3",
                "2024-07-07",
                "6",
                "5",
                "2024-07-07",
                "a3",
                "c",
            ),
            (
                "4",
                "124",
                "4",
                "d",
                "4",
                "2024-07-07",
                "4",
                "5",
                "2024-07-07",
                None,
                "d",
            ),
            (
                "1",
                "123",
                "5",
                "e",
                "5",
                "2024-07-07",
                "6",
                "5",
                "2024-07-07",
                "a3",
                "e",
            ),
            (
                "6",
                "126",
                "6",
                "f",
                "6",
                "2024-07-07",
                "3",
                "5",
                "2024-07-07",
                None,
                None,
            ),
        ],
        columns=[
            "numerotiers",
            "numerodecompte",
            "numerocontratinterne",
            "etatcontrat",
            "numerocontratexterne",
            "datesouscription",
            "codeproduit",
            "numeropackage",
            "dateecheance",
            "libproduit",
            "lib_etatcontrat",
        ],
    )

    compare_dataframes(actual, expected, sort_by=["numerotiers"])
