[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
/)
'''

[tool.poe.tasks]
ruff = "ruff src/ tests/ --fix"
mypy = "mypy src/ tests/ --explicit-package-bases --namespace-packages"
black = "black src/ tests/"
usort = "usort format src/ tests/"
test = "pytest -v -s tests/"
cov = "coverage run --source=src -m pytest -v -s tests/"
report = "coverage report -m"
requirements = "poetry export --without-hashes -f requirements.txt --output requirements.txt && poetry export --with dev --without-hashes -f requirements.txt --output requirements-dev.txt"
covtest = ["cov", "report"]
all = ["black", "usort", "mypy", "ruff"]

[tool.coverage.run]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
fail_under = 80

[tool.poetry]
name = "cdm-bfi"
version = "0.1.0"
description = ""
authors = ["Ayoub LABYAD <ayoublabiad@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
mypy = "^0.942"
usort = "^1.0.7"
pre-commit = "^2.18.1"
pyspark = "3.3.4"
pytest = "^7.1.1"
pandas = "2.0.3"
findspark = "^2.0.1"
notebook = "^6.4.12"
pytest-cov = "^3.0.0"
coverage = { extras = ["toml"], version = "^6.4.4" }
pytest-mock = "^3.8.2"
poethepoet = "^0.22.0"
ruff = "^0.0.291"
pandas-stubs = "2.0.3.230814"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
ignore = ["E402"]
fixable = ["ALL"]
target-version = "py38"
line-length = 120

[[tool.mypy.overrides]]
module = ["findspark"]
ignore_missing_imports = true
